name: Snapshot version & release
run-name: snapshot-version-release

on:
  issue_comment:
    types: [created]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  snapshot-version-release:
    name: PR comment
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '!snapshot')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pull request
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Snapshot version
        id: snapshot-version
        run: npm run version:snapshot ${{ steps.extract-name.outputs.name }}

      - name: List versions
        id: list-versions
        run: |
          npx zx <<'EOF'
          $.verbose = false
          const files = await glob(['packages/*/package.json']);
          const descriptors = files.map(async file => {
            const json = JSON.parse(await $`cat ${file}`)
            return { name: json.name, version: json.version };
          });
          const res = JSON.stringify(await Promise.all(descriptors));
          $`echo NIKOS=${res} > $GITHUB_OUTPUT`
          EOF

      - name: Snapshot release
        id: snapshot-release
        run: npm run release:snapshot
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Post Comment with Result
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, number } = context.issue;
            const author = context.payload.comment.user.login;
            const packageInfo = JSON.parse(`${{ steps.list-versions.outputs.NIKOS }}`);
            let table = `| Package | Version |\n| --- | --- |\n`;
            packageInfo.forEach(({ name, version }) => { table += `| ${name} | ${version} |\n` });
            let snippets = ``;
            packageInfo.forEach(({ name, version }) => { snippets += `\`\`\`sh\n# ${name}\nnpm i ${name}@${version}\n\`\`\`\n` });
            const body = `Hey @${author} - the snapshot version command generated the following package versions:\n${table}
            Tip: use the snippet copy button below to quick install the required packages.\n${snippets}`;
            await github.rest.issues.createComment({ owner, repo, issue_number: number, body });